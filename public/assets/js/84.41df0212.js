(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{338:function(t,a,s){"use strict";s.r(a);var n=s(2),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_002-mongodb-聚合管道"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_002-mongodb-聚合管道","aria-hidden":"true"}},[t._v("#")]),t._v(" 002 - MongoDB 聚合管道")]),t._v(" "),s("p",[s("motto")],1),t._v(" "),s("h2",{attrs:{id:"_1-聚合操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-聚合操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 聚合操作")]),t._v(" "),s("h3",{attrs:{id:"db-collection-aggregate（）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#db-collection-aggregate（）","aria-hidden":"true"}},[t._v("#")]),t._v(" db.collection.aggregate（）")]),t._v(" "),s("p",[t._v("db."),s("collection",[t._v(".aggregate（"),s("pipeline",[t._v("，"),s("options",[t._v("）")])],1)],1)],1),t._v(" "),s("p",[s("pipeline",[t._v("文档定义了操作中使用的聚合管道阶段和聚合操作符")])],1),t._v(" "),s("p",[s("options",[t._v(": (有很多，就只说一个 allowDiskUse)")])],1),t._v(" "),s("p",[t._v("allowDiskUse："),s("boolean",[t._v("每个聚合管道阶段使用的内存不能超过100MB如果数据量较大，为了防止聚合管道阶段超出内存上限并且抛出错误，可以启用allowDiskUse选项")])],1),t._v(" "),s("p",[t._v("allowDiskUse启用之后，聚合阶段可以在内存容量不足时，将操作数据写入临时文件中")]),t._v(" "),s("p",[t._v("临时文件会被写入dbPath下的_tmp文件夹，dbpath的默认值为/data/db")]),t._v(" "),s("h2",{attrs:{id:"_2-聚合操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-聚合操作符","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 聚合操作符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("表达式")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("实例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("$sum")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("计算总和。")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('db.mycol.aggregate([{$group : {_id : "$by_user", num_tutorial : {$sum : "$likes"}}}])')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("$avg")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("计算平均值")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('db.mycol.aggregate([{$group : {_id : "$by_user", num_tutorial : {$avg : "$likes"}}}])')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("$min")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("获取集合中所有文档对应值得最小值。")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('db.mycol.aggregate([{$group : {_id : "$by_user", num_tutorial : {$min : "$likes"}}}])')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("$max")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("获取集合中所有文档对应值得最大值。")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('db.mycol.aggregate([{$group : {_id : "$by_user", num_tutorial : {$max : "$likes"}}}])')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("$push")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在结果文档中插入值到一个数组中。")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('db.mycol.aggregate([{$group : {_id : "$by_user", url : {$push: "$url"}}}])')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("$addToSet")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在结果文档中插入值到一个数组中，但不创建副本。")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('db.mycol.aggregate([{$group : {_id : "$by_user", url : {$addToSet : "$url"}}}])')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("$first")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("根据资源文档的排序获取第一个文档数据。")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('db.mycol.aggregate([{$group : {_id : "$by_user", first_url : {$first : "$url"}}}])')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("$last")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("根据资源文档的排序获取最后一个文档数据")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('db.mycol.aggregate([{$group : {_id : "$by_user", last_url : {$last : "$url"}}}])')])])])]),t._v(" "),s("h2",{attrs:{id:"_3-聚合表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-聚合表达式","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 聚合表达式")]),t._v(" "),s("p",[t._v("介绍几种常见的表达式")]),t._v(" "),s("h3",{attrs:{id:"字段路径表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字段路径表达式","aria-hidden":"true"}},[t._v("#")]),t._v(" 字段路径表达式")]),t._v(" "),s("p",[t._v("$"),s("field",[t._v(" - 使用 $ 来指示字段路径")])],1),t._v(" "),s("p",[t._v("$"),s("field",[t._v("."),s("sub-field",[t._v(" - 使用 $ 和 . 来指示内嵌文档字段路径")])],1)],1),t._v(" "),s("p",[t._v("$ name - 指示银行账户文档中客户姓名的字段")]),t._v(" "),s("p",[t._v("$ info.dateOpened - 指示银行账户文档中开户日期的字段")]),t._v(" "),s("h3",{attrs:{id:"系统变量表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#系统变量表达式","aria-hidden":"true"}},[t._v("#")]),t._v(" 系统变量表达式")]),t._v(" "),s("p",[t._v("$$"),s("variable",[t._v(" - 使用$$来指示系统变量")])],1),t._v(" "),s("p",[t._v("$$CURRENT - 指示管道中当前操作的文档 - $$CURRENT."),s("field",[t._v(" 和 $"),s("field",[t._v("是等效的")])],1)],1),t._v(" "),s("h3",{attrs:{id:"常量表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常量表达式","aria-hidden":"true"}},[t._v("#")]),t._v(" 常量表达式")]),t._v(" "),s("p",[t._v("$literal："),s("value",[t._v(" - 指示常量"),s("value")],1)],1),t._v(" "),s("p",[t._v('$literal:"$name" - 指示常量字符串"$name" - 这里的$被当作常量处理，而不是字段路径表达式')]),t._v(" "),s("h3",{attrs:{id:"聚合管道阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#聚合管道阶段","aria-hidden":"true"}},[t._v("#")]),t._v(" 聚合管道阶段")]),t._v(" "),s("p",[t._v("$project - 对输入文档进行再次投影\n$match - 对输入文档进行筛选\n$limit - 筛选出管道内前N篇文档\n$skip - 跳过管道内前N篇文档\n$unwind - 展开输入文档中的数组字段\n$sort - 对输入文档进行排序\n$lookup - 对输入文档进行查询操作\n$group - 对输入文档进行分组\n$out - 将管道中的文档输出")]),t._v(" "),s("h3",{attrs:{id:"project-对输入文档进行再次投影"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#project-对输入文档进行再次投影","aria-hidden":"true"}},[t._v("#")]),t._v(" $project - 对输入文档进行再次投影")]),t._v(" "),s("p",[t._v("$project是一个很常用的聚合阶段可以用来灵活地控制输出文档的格式也可以用来剔除不相关的字段，以优化聚合管道操作的性能")]),t._v(" "),s("h3",{attrs:{id:"match-对输入文档进行筛选"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#match-对输入文档进行筛选","aria-hidden":"true"}},[t._v("#")]),t._v(" $match - 对输入文档进行筛选")]),t._v(" "),s("p",[t._v("$match中使用的文档筛选语法，和"),s("strong",[t._v("读取文档")]),t._v("时的筛选语法相同")]),t._v(" "),s("p",[t._v("$match也是一个很常用的聚合阶段")]),t._v(" "),s("p",[t._v("应该尽量在聚合管道的开始阶段应用$match")]),t._v(" "),s("p",[t._v("这样可以减少后续阶段中需要处理的文档数量，优化聚合操作的性能")]),t._v(" "),s("h3",{attrs:{id:"limit-筛选出管道内前n篇文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#limit-筛选出管道内前n篇文档","aria-hidden":"true"}},[t._v("#")]),t._v(" $limit - 筛选出管道内前N篇文档")]),t._v(" "),s("p",[t._v("这个就不说了，直接加数字就好了")]),t._v(" "),s("h3",{attrs:{id:"skip-跳过管道内前n篇文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#skip-跳过管道内前n篇文档","aria-hidden":"true"}},[t._v("#")]),t._v(" $skip - 跳过管道内前N篇文档")]),t._v(" "),s("p",[t._v("这个就不说了，直接加数字就好了")]),t._v(" "),s("h3",{attrs:{id:"unwind-展开输入文档中的数组字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unwind-展开输入文档中的数组字段","aria-hidden":"true"}},[t._v("#")]),t._v(" $unwind - 展开输入文档中的数组字段")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// “展开数组时添加元素位置"')]),t._v("\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("accounts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("aggregate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    $unwind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$currency"')]),t._v("，\n        includeArrayIndex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ccyIndex"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// “展开数组时保留空数组或不存在数组的文档”")]),t._v("\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("accounts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("aggregate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    $unwind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$currency"')]),t._v("，\n        preserveNullAndEmptyArrays"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"sort-对输入文档进行排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sort-对输入文档进行排序","aria-hidden":"true"}},[t._v("#")]),t._v(" $sort - 对输入文档进行排序")]),t._v(" "),s("p",[t._v("和查询时的排序一样，")]),t._v(" "),s("p",[t._v("对某个字段正序排列输入 1，")]),t._v(" "),s("p",[t._v("反序排列输入 -1")]),t._v(" "),s("h3",{attrs:{id:"lookup-对输入文档进行查询操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lookup-对输入文档进行查询操作","aria-hidden":"true"}},[t._v("#")]),t._v(" $lookup - 对输入文档进行查询操作")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用单一字段值进行查询")]),t._v("\n$lookup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("： "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" collection to join "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//同一数据库中的另一个查询集合")]),t._v("\n    localField： "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" field "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" the input documents "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//管道文档中用来进行查询的字段")]),t._v("\n    foreignField： "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" field "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" the documents "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" the "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"from"')]),t._v("\n    collection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//查询集合中的查询字段")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("： "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" output array field "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//写入管道文档中的查询结果数组字段")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果localField是一个数组字段,也可以进行查询，新字段匹配到多个的话返回的也会是数组，")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果想要分离开的话可以使用unwind在lookup管道前进行分离。")]),t._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用复杂条件进行查询")]),t._v("\n$lookup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("： "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" collection to join "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("\n        var_1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ： "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" expression "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ，"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("， "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" var_n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ： "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" expression "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对查询集合中的文档使用聚合阶段进行处理时，如果需要参考管道文档中的字段，则必须使用let参数对字段进行声明")]),t._v("\n    pipeline"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" pipeline to execute on the collection to join "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对查询集合中的文档使用聚合阶段进行处理")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("： "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" output array field "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//写入管道文档中的查询结果数组字段")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("accounts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("aggregate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    $lookup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"forex"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        pipeline"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                $match"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2018-12-21"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"forexData"')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意，在这个例子中，查询条件和管道文档之间，其实并没有直接的联系这种查询被称作不相关查询，$lookup从3.6版本开始支持不相关查询")]),t._v("\n\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("accounts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("aggregate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    $lookup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"forex"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            bal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$balance"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        pipeline"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                $match"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    $expr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        $and"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                                $eq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$date"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2018-12-21"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                                $gt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$$bal"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"forexData"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"group-对输入文档进行分组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#group-对输入文档进行分组","aria-hidden":"true"}},[t._v("#")]),t._v(" $group - 对输入文档进行分组")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("$group"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    id： "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" expression "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义分组规则")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("field1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ："),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" accumulator1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ： "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" expression1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以使用聚合操作符来定义新字段")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("不使用聚合操作符的情况下，$group可以返回管道文档中某一字段的所有（不重复的）值。")]),t._v(" "),s("li",[t._v("使用聚合操作符的情况下，$group可以返回管道文档中某一字段的所有（不重复的）值的类下的统计相关数据。")]),t._v(" "),s("li",[t._v("使用聚合操作符计算"),s("strong",[t._v("所有文档聚合值")]),t._v("时，可以给 _id 赋值为null")])]),t._v(" "),s("h3",{attrs:{id:"out-将管道中的文档输出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#out-将管道中的文档输出","aria-hidden":"true"}},[t._v("#")]),t._v(" $out - 将管道中的文档输出")]),t._v(" "),s("p",[t._v("$out 可以将聚合管道中的文档写入一个新集合")]),t._v(" "),s("p",[t._v("如果聚合管道操作遇到错误，$out 管道阶段不会创建新集合或是覆盖已存在的集合内容")]),t._v(" "),s("h2",{attrs:{id:"_4-聚合操作的优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-聚合操作的优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. 聚合操作的优化")]),t._v(" "),s("h3",{attrs:{id:"_4-1-聚合阶段顺序优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-聚合阶段顺序优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.1 聚合阶段顺序优化")]),t._v(" "),s("h4",{attrs:{id:"_1-project-match"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-project-match","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. $project + $match")]),t._v(" "),s("p",[t._v("$match 阶段会在 $project 阶段之前运行。")]),t._v(" "),s("p",[t._v("$match 是可以一分为二或者更多的。因为有的字段可以提前有的不可以。（$match 中筛选条件不受 $project 影响的话，那么该筛选条件就是可以提前的）")]),t._v(" "),s("h4",{attrs:{id:"_2-sort-match"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-sort-match","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. $sort + $match")]),t._v(" "),s("p",[t._v("$match 阶段会在 $sort 阶段之前运行")]),t._v(" "),s("h4",{attrs:{id:"_3-project-skip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-project-skip","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. $project + $skip")]),t._v(" "),s("p",[t._v("$skip 阶段会在 $project 阶段之前运行")]),t._v(" "),s("h3",{attrs:{id:"_4-2-聚合阶段合并优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-聚合阶段合并优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.2 聚合阶段合并优化")]),t._v(" "),s("h4",{attrs:{id:"_1-sort-limit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-sort-limit","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. $sort +$limit")]),t._v(" "),s("p",[t._v("如果两者之间没有夹杂着会改变文档数量的聚合阶段，$sort 和 $limit 阶段可以合并。")]),t._v(" "),s("p",[t._v("比如 $sort 和 $limit 之间夹杂了 $project ，那么 $limit 可以提到前面来和 $sort进行合并。")]),t._v(" "),s("h4",{attrs:{id:"_2-limit-limit，-skip-skip，-match-match"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-limit-limit，-skip-skip，-match-match","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. $limit +$limit，$skip + $skip，$match +$match")]),t._v(" "),s("p",[t._v("$limit +$limit，$skip + $skip，$match +$match连续的$limit，$skip或$match阶段排列在一起时，可以合并为一个阶段。")]),t._v(" "),s("h4",{attrs:{id:"_3-lookup-unwind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-lookup-unwind","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. $lookup+ $unwind")]),t._v(" "),s("p",[t._v("连续排列在一起的$1ookup和￥unwind阶段，如果$unwind应用在$lookup阶段创建的 as 字段上，则两者可以合并。")]),t._v(" "),s("h2",{attrs:{id:"_5-总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. 总结")]),t._v(" "),s("p",[t._v("使用db.collection.aggregate（）命令进行聚合操作\n使用聚合表达式\n常用的聚合管道阶段\n常用的聚合操作符\n聚合操作的局限和优化")])])}),[],!1,null,null,null);a.default=e.exports}}]);