(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{355:function(t,a,_){"use strict";_.r(a);var v=_(2),r=Object(v.a)({},(function(){var t=this,a=t.$createElement,_=t._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"_010-能不能说一说-tcp-的流量控制？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_010-能不能说一说-tcp-的流量控制？","aria-hidden":"true"}},[t._v("#")]),t._v(" 010-能不能说一说 TCP 的流量控制？")]),t._v(" "),_("p",[t._v("对于发送端和接收端而言，TCP 需要把发送的数据放到"),_("strong",[t._v("发送缓存区")]),t._v(", 将接收的数据放到"),_("strong",[t._v("接收缓存区")]),t._v("。")]),t._v(" "),_("p",[t._v("而流量控制索要做的事情，就是在通过接收缓存区的大小，控制发送端的发送。如果对方的接收缓存区满了，就不能再继续发送了。")]),t._v(" "),_("p",[t._v("要具体理解流量控制，首先需要了解滑动窗口的概念。")]),t._v(" "),_("h3",{attrs:{id:"tcp-滑动窗口"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp-滑动窗口","aria-hidden":"true"}},[t._v("#")]),t._v(" TCP 滑动窗口")]),t._v(" "),_("p",[t._v("TCP 滑动窗口分为两种: "),_("strong",[t._v("发送窗口")]),t._v("和"),_("strong",[t._v("接收窗口")]),t._v("。")]),t._v(" "),_("h3",{attrs:{id:"发送窗口"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#发送窗口","aria-hidden":"true"}},[t._v("#")]),t._v(" 发送窗口")]),t._v(" "),_("p",[t._v("发送端的滑动窗口结构如下:")]),t._v(" "),_("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://pic2.zhimg.com/80/v2-3cd9e36dfbad543a00dba1a430708af5_720w.jpg",alt:"img"}}),t._v(" "),_("p",[t._v("其中包含四大部分: - 已发送且已确认 - 已发送但未确认 - 未发送但可以发送 - 未发送也不可以发送")]),t._v(" "),_("p",[t._v("其中有一些重要的概念，我标注在图中:")]),t._v(" "),_("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://pic3.zhimg.com/80/v2-694b4932025a64c2ba9ca0a02c8810ce_720w.jpg",alt:"img"}}),t._v(" "),_("p",[t._v("发送窗口就是图中被框住的范围。SND 即send, WND 即window, UNA 即unacknowledged, 表示未被确认，NXT 即next, 表示下一个发送的位置。")]),t._v(" "),_("h3",{attrs:{id:"接收窗口"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#接收窗口","aria-hidden":"true"}},[t._v("#")]),t._v(" 接收窗口")]),t._v(" "),_("p",[t._v("接收端的窗口结构如下:")]),t._v(" "),_("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://pic2.zhimg.com/80/v2-eb29637c332d0920aacf383107930215_720w.jpg",alt:"img"}}),t._v(" "),_("p",[t._v("REV 即 receive，NXT 表示下一个接收的位置，WND 表示接收窗口大小。")]),t._v(" "),_("h3",{attrs:{id:"流量控制过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#流量控制过程","aria-hidden":"true"}},[t._v("#")]),t._v(" 流量控制过程")]),t._v(" "),_("p",[t._v("这里我们不用太复杂的例子，以一个最简单的来回来模拟一下流量控制的过程，方便大家理解。")]),t._v(" "),_("p",[t._v("首先双方三次握手，初始化各自的窗口大小，均为 200 个字节。")]),t._v(" "),_("p",[t._v("假如当前发送端给接收端发送 100 个字节，那么此时对于发送端而言，SND.NXT 当然要右移 100 个字节，也就是说当前的可用窗口减少了 100 个字节，这很好理解。")]),t._v(" "),_("p",[t._v("现在这 100 个到达了接收端，被放到接收端的缓冲队列中。不过此时由于大量负载的原因，接收端处理不了这么多字节，只能处理 40 个字节，剩下的 60 个字节被留在了缓冲队列中。")]),t._v(" "),_("p",[t._v("注意了，此时接收端的情况是处理能力不够用啦，你发送端给我少发点，所以此时接收端的接收窗口应该缩小，具体来说，缩小 60 个字节，由 200 个字节变成了 140 字节，因为缓冲队列还有 60 个字节没被应用拿走。")]),t._v(" "),_("p",[t._v("因此，接收端会在 ACK 的报文首部带上缩小后的滑动窗口 140 字节，发送端对应地调整发送窗口的大小为 140 个字节。")]),t._v(" "),_("p",[t._v("此时对于发送端而言，已经发送且确认的部分增加 40 字节，也就是 SND.UNA 右移 40 个字节，同时"),_("strong",[t._v("发送窗口")]),t._v("缩小为 140 个字节。")]),t._v(" "),_("p",[t._v("这也就是"),_("strong",[t._v("流量控制")]),t._v("的过程。尽管回合再多，整个控制的过程和原理是一样的。")])])}),[],!1,null,null,null);a.default=r.exports}}]);